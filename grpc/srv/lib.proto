// The protocol between the client (only CLI at present) and Ayup service gateway

syntax = "proto3";

option go_package = "premai.io/Ayup/go/pkg/grpc/srv";

package srv;

service Srv {
    rpc Sync(stream FileChunks) returns (Result);
    rpc Analysis(stream ActReq) returns (stream ActReply);
    rpc Login(LoginReq) returns (LoginReply);
    rpc Forward(stream ForwardRequest) returns (stream ForwardResponse);
}

message FileChunk {
    string path = 1;
    bytes data = 2;
    int64 offset = 3;
    bool last = 4;
}

message FileChunks {
    repeated FileChunk chunk = 1;
    bool cancel = 2;
}

message Error {
    string error = 1;
}

message Result {
    optional Error error = 1;
}

message LoginReq {
}

message LoginReply {
    optional Error error = 1;
}

message ChoiceBool {
    bool value = 2;

    string title = 3;
    string description = 4;
    string affirmative = 5;
    string negative = 6;
}

message Choice {
    uint32 seq = 1;

    oneof variant {
        ChoiceBool bool = 2;
    }
}

message ChosenBool {
    bool value = 2;
}

message Chosen {
    uint32 seq = 1;

    oneof variant {
        ChosenBool bool = 2;
    }
}

message AnalysisResult {
    bool useDockerfile = 1;
    bool usePythonRequirements = 2;

    bool needsGit = 3;
    bool needsLibGL = 4;
    bool needsLibGlib = 5;
}

// Generic streamed reply to actions
message ActReply {
    oneof variant {
        string log = 2;
        Choice choice = 3;
        AnalysisResult analysisResult = 4;
        Error error = 5;
    }

    string source = 6;
}

// generic streamed request for an action
message ActReq {
    // string session = 1;
    // uint32 seq = 2;

    optional Chosen choice = 3;

    bool cancel = 4;
}

message ForwardRequest {
    bytes data = 2;
}

message ForwardResponse {
    bytes data = 2;

    bool closed = 3;
}
